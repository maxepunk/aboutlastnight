# Google Apps Script Form Submission API Contract
# Version: 1.0.0 (Production)
# Status: STABLE - DO NOT BREAK

openapi: 3.0.0
info:
  title: About Last Night Form Submission API
  description: |
    Google Apps Script endpoint for form submissions from landing page.
    This API is PRODUCTION and breaking it breaks the business.
  version: 1.0.0
  contact:
    name: About Last Night Tech Team

servers:
  - url: https://script.google.com/macros/s/{deploymentId}/exec
    description: Google Apps Script Web App endpoint
    variables:
      deploymentId:
        default: REDACTED
        description: Deployment-specific ID from Google Apps Script

paths:
  /:
    post:
      summary: Submit form data
      description: |
        Submit interest form or playtest signup. The endpoint determines which
        form based on the presence of specific fields.

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/InterestFormSubmission'
                - $ref: '#/components/schemas/PlaytestFormSubmission'

      responses:
        '200':
          description: Submission successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        '500':
          description: Server error (Google Apps Script failure)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    InterestFormSubmission:
      type: object
      description: Main interest form (email collection for ticket launch)
      required:
        - email
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          example: user@example.com
          description: User's email address for ticket launch notifications

        timestamp:
          type: string
          format: date-time
          description: Client-side submission timestamp (generated by frontend)
          example: "2025-01-19T14:30:00Z"

        source:
          type: string
          enum: [landing-page, social-media, direct]
          default: landing-page
          description: Traffic source (optional, for analytics)

    PlaytestFormSubmission:
      type: object
      description: Playtest signup form (limited capacity signups)
      required:
        - email
        - fullName
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          example: user@example.com
          description: User's email address

        fullName:
          type: string
          minLength: 2
          maxLength: 100
          example: John Doe
          description: User's full name (required for playtest)

        photoConsent:
          type: boolean
          default: false
          description: Consent to event photography

        timestamp:
          type: string
          format: date-time
          description: Client-side submission timestamp
          example: "2025-01-19T14:30:00Z"

    SuccessResponse:
      type: object
      required:
        - success
        - message
        - trackingId
      properties:
        success:
          type: boolean
          example: true
          description: Always true for successful submissions

        message:
          type: string
          example: "Thank you for your interest! Confirmation email sent."
          description: Human-readable success message

        trackingId:
          type: string
          pattern: '^[A-Z0-9]{8}$'
          example: "A1B2C3D4"
          description: Unique tracking ID for this submission

        confirmationEmail:
          type: boolean
          example: true
          description: Whether confirmation email was sent

    ErrorResponse:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          example: false
          description: Always false for errors

        error:
          type: string
          example: "Invalid email address"
          description: Human-readable error message

        field:
          type: string
          example: "email"
          description: Which field caused the error (if validation error)

  securitySchemes: {}
    # No authentication required - public form submission endpoint

# Backend Implementation Notes (for reference)
x-backend-implementation:
  storage:
    type: Google Sheets
    sheet: "About Last Night Submissions"
    columns:
      - Timestamp
      - Email
      - Full Name (playtest only)
      - Photo Consent (playtest only)
      - Tracking ID
      - Source

  email-notifications:
    to-user:
      subject: "Thank you for your interest in About Last Night"
      template: Confirmation email with event details and tracking ID

    to-organizers:
      subject: "New signup: {email}"
      template: Alert email with submission details

  rate-limiting:
    type: None (Google Apps Script handles)
    note: Consider adding client-side rate limiting if abuse occurs

  validation:
    email: Google Apps Script validates email format
    required-fields: Checked server-side
    deduplication: Last submission wins (no duplicate checking)

# Frontend Integration Notes
x-frontend-integration:
  submission-method: |
    Use native fetch() with form data:

    const formData = new FormData(formElement);
    const response = await fetch(ENDPOINT_URL, {
      method: 'POST',
      body: formData
    });

  error-handling:
    retryable-errors:
      - Network failure (no response)
      - HTTP 408 (Timeout)
      - HTTP 429 (Rate limit)
      - HTTP 500-599 (Server errors)

    non-retryable-errors:
      - HTTP 400 (Validation error)
      - HTTP 401/403 (Auth error - shouldn't happen)
      - HTTP 404 (Endpoint not found - config error)

  retry-strategy:
    type: Exponential backoff
    max-retries: 3
    delays: [200ms, 400ms, 800ms]
    jitter: random(0-100ms)

  localStorage-recovery:
    trigger: After all retries exhausted
    storage-key: aln_form_recovery
    ttl: 7 days
    clear-on: Successful submission (HTTP 200)

# Testing Checklist
x-testing-requirements:
  - [ ] Submit valid interest form → receives HTTP 200
  - [ ] Submit valid playtest form → receives HTTP 200
  - [ ] Submit invalid email → receives HTTP 400 with field: "email"
  - [ ] Submit missing required field → receives HTTP 400
  - [ ] Data appears in Google Sheets within 5 seconds
  - [ ] User receives confirmation email within 30 seconds
  - [ ] Organizers receive alert email within 30 seconds
  - [ ] Tracking ID is unique (check against existing submissions)
  - [ ] Form submission survives Google Apps Script timeout (10s max execution)
  - [ ] Submit from mobile browser → works identically
  - [ ] Submit with network interruption → retries and succeeds
  - [ ] Submit when backend down → saves to localStorage

# Version History
x-version-history:
  - version: 1.0.0
    date: 2025-01-19
    changes: Initial contract documentation (existing production API)
